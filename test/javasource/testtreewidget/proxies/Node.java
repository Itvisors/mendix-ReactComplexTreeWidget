// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testtreewidget.proxies;

public class Node
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject nodeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestTreeWidget.Node";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		NodeID("NodeID"),
		HasChildren("HasChildren"),
		Children("Children"),
		CanMove("CanMove"),
		CanRename("CanRename"),
		Parent("TestTreeWidget.Parent"),
		Node_TestContainer("TestTreeWidget.Node_TestContainer");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Node(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Node(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject nodeMendixObject)
	{
		if (nodeMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, nodeMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.nodeMendixObject = nodeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Node.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static testtreewidget.proxies.Node initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testtreewidget.proxies.Node.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static testtreewidget.proxies.Node initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testtreewidget.proxies.Node(context, mendixObject);
	}

	public static testtreewidget.proxies.Node load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testtreewidget.proxies.Node.initialize(context, mendixObject);
	}

	public static java.util.List<testtreewidget.proxies.Node> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> testtreewidget.proxies.Node.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of NodeID
	 */
	public final java.lang.Long getNodeID()
	{
		return getNodeID(getContext());
	}

	/**
	 * @param context
	 * @return value of NodeID
	 */
	public final java.lang.Long getNodeID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.NodeID.toString());
	}

	/**
	 * Set value of NodeID
	 * @param nodeid
	 */
	public final void setNodeID(java.lang.Long nodeid)
	{
		setNodeID(getContext(), nodeid);
	}

	/**
	 * Set value of NodeID
	 * @param context
	 * @param nodeid
	 */
	public final void setNodeID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long nodeid)
	{
		getMendixObject().setValue(context, MemberNames.NodeID.toString(), nodeid);
	}

	/**
	 * @return value of HasChildren
	 */
	public final java.lang.Boolean getHasChildren()
	{
		return getHasChildren(getContext());
	}

	/**
	 * @param context
	 * @return value of HasChildren
	 */
	public final java.lang.Boolean getHasChildren(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.HasChildren.toString());
	}

	/**
	 * Set value of HasChildren
	 * @param haschildren
	 */
	public final void setHasChildren(java.lang.Boolean haschildren)
	{
		setHasChildren(getContext(), haschildren);
	}

	/**
	 * Set value of HasChildren
	 * @param context
	 * @param haschildren
	 */
	public final void setHasChildren(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean haschildren)
	{
		getMendixObject().setValue(context, MemberNames.HasChildren.toString(), haschildren);
	}

	/**
	 * @return value of Children
	 */
	public final java.lang.String getChildren()
	{
		return getChildren(getContext());
	}

	/**
	 * @param context
	 * @return value of Children
	 */
	public final java.lang.String getChildren(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Children.toString());
	}

	/**
	 * Set value of Children
	 * @param children
	 */
	public final void setChildren(java.lang.String children)
	{
		setChildren(getContext(), children);
	}

	/**
	 * Set value of Children
	 * @param context
	 * @param children
	 */
	public final void setChildren(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String children)
	{
		getMendixObject().setValue(context, MemberNames.Children.toString(), children);
	}

	/**
	 * @return value of CanMove
	 */
	public final java.lang.Boolean getCanMove()
	{
		return getCanMove(getContext());
	}

	/**
	 * @param context
	 * @return value of CanMove
	 */
	public final java.lang.Boolean getCanMove(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.CanMove.toString());
	}

	/**
	 * Set value of CanMove
	 * @param canmove
	 */
	public final void setCanMove(java.lang.Boolean canmove)
	{
		setCanMove(getContext(), canmove);
	}

	/**
	 * Set value of CanMove
	 * @param context
	 * @param canmove
	 */
	public final void setCanMove(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean canmove)
	{
		getMendixObject().setValue(context, MemberNames.CanMove.toString(), canmove);
	}

	/**
	 * @return value of CanRename
	 */
	public final java.lang.Boolean getCanRename()
	{
		return getCanRename(getContext());
	}

	/**
	 * @param context
	 * @return value of CanRename
	 */
	public final java.lang.Boolean getCanRename(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.CanRename.toString());
	}

	/**
	 * Set value of CanRename
	 * @param canrename
	 */
	public final void setCanRename(java.lang.Boolean canrename)
	{
		setCanRename(getContext(), canrename);
	}

	/**
	 * Set value of CanRename
	 * @param context
	 * @param canrename
	 */
	public final void setCanRename(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean canrename)
	{
		getMendixObject().setValue(context, MemberNames.CanRename.toString(), canrename);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Parent
	 */
	public final testtreewidget.proxies.Node getParent() throws com.mendix.core.CoreException
	{
		return getParent(getContext());
	}

	/**
	 * @param context
	 * @return value of Parent
	 * @throws com.mendix.core.CoreException
	 */
	public final testtreewidget.proxies.Node getParent(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testtreewidget.proxies.Node result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Parent.toString());
		if (identifier != null) {
			result = testtreewidget.proxies.Node.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Parent
	 * @param parent
	 */
	public final void setParent(testtreewidget.proxies.Node parent)
	{
		setParent(getContext(), parent);
	}

	/**
	 * Set value of Parent
	 * @param context
	 * @param parent
	 */
	public final void setParent(com.mendix.systemwideinterfaces.core.IContext context, testtreewidget.proxies.Node parent)
	{
		if (parent == null) {
			getMendixObject().setValue(context, MemberNames.Parent.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Parent.toString(), parent.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Node_TestContainer
	 */
	public final testtreewidget.proxies.TestContainer getNode_TestContainer() throws com.mendix.core.CoreException
	{
		return getNode_TestContainer(getContext());
	}

	/**
	 * @param context
	 * @return value of Node_TestContainer
	 * @throws com.mendix.core.CoreException
	 */
	public final testtreewidget.proxies.TestContainer getNode_TestContainer(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testtreewidget.proxies.TestContainer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Node_TestContainer.toString());
		if (identifier != null) {
			result = testtreewidget.proxies.TestContainer.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Node_TestContainer
	 * @param node_testcontainer
	 */
	public final void setNode_TestContainer(testtreewidget.proxies.TestContainer node_testcontainer)
	{
		setNode_TestContainer(getContext(), node_testcontainer);
	}

	/**
	 * Set value of Node_TestContainer
	 * @param context
	 * @param node_testcontainer
	 */
	public final void setNode_TestContainer(com.mendix.systemwideinterfaces.core.IContext context, testtreewidget.proxies.TestContainer node_testcontainer)
	{
		if (node_testcontainer == null) {
			getMendixObject().setValue(context, MemberNames.Node_TestContainer.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Node_TestContainer.toString(), node_testcontainer.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return nodeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testtreewidget.proxies.Node that = (testtreewidget.proxies.Node) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

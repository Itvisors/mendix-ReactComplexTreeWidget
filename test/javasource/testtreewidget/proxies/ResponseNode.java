// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testtreewidget.proxies;

public class ResponseNode
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject responseNodeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestTreeWidget.ResponseNode";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		data("data"),
		index("index"),
		isFolder("isFolder"),
		children("children"),
		canMove("canMove"),
		canRename("canRename"),
		ResponseNode_GetDataResponse("TestTreeWidget.ResponseNode_GetDataResponse");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ResponseNode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected ResponseNode(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject responseNodeMendixObject)
	{
		if (responseNodeMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, responseNodeMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.responseNodeMendixObject = responseNodeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ResponseNode.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static testtreewidget.proxies.ResponseNode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testtreewidget.proxies.ResponseNode.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static testtreewidget.proxies.ResponseNode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testtreewidget.proxies.ResponseNode(context, mendixObject);
	}

	public static testtreewidget.proxies.ResponseNode load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testtreewidget.proxies.ResponseNode.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of data
	 */
	public final java.lang.String getdata()
	{
		return getdata(getContext());
	}

	/**
	 * @param context
	 * @return value of data
	 */
	public final java.lang.String getdata(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.data.toString());
	}

	/**
	 * Set value of data
	 * @param data
	 */
	public final void setdata(java.lang.String data)
	{
		setdata(getContext(), data);
	}

	/**
	 * Set value of data
	 * @param context
	 * @param data
	 */
	public final void setdata(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String data)
	{
		getMendixObject().setValue(context, MemberNames.data.toString(), data);
	}

	/**
	 * @return value of index
	 */
	public final java.lang.String getindex()
	{
		return getindex(getContext());
	}

	/**
	 * @param context
	 * @return value of index
	 */
	public final java.lang.String getindex(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.index.toString());
	}

	/**
	 * Set value of index
	 * @param index
	 */
	public final void setindex(java.lang.String index)
	{
		setindex(getContext(), index);
	}

	/**
	 * Set value of index
	 * @param context
	 * @param index
	 */
	public final void setindex(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String index)
	{
		getMendixObject().setValue(context, MemberNames.index.toString(), index);
	}

	/**
	 * @return value of isFolder
	 */
	public final java.lang.Boolean getisFolder()
	{
		return getisFolder(getContext());
	}

	/**
	 * @param context
	 * @return value of isFolder
	 */
	public final java.lang.Boolean getisFolder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.isFolder.toString());
	}

	/**
	 * Set value of isFolder
	 * @param isfolder
	 */
	public final void setisFolder(java.lang.Boolean isfolder)
	{
		setisFolder(getContext(), isfolder);
	}

	/**
	 * Set value of isFolder
	 * @param context
	 * @param isfolder
	 */
	public final void setisFolder(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isfolder)
	{
		getMendixObject().setValue(context, MemberNames.isFolder.toString(), isfolder);
	}

	/**
	 * @return value of children
	 */
	public final java.lang.String getchildren()
	{
		return getchildren(getContext());
	}

	/**
	 * @param context
	 * @return value of children
	 */
	public final java.lang.String getchildren(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.children.toString());
	}

	/**
	 * Set value of children
	 * @param children
	 */
	public final void setchildren(java.lang.String children)
	{
		setchildren(getContext(), children);
	}

	/**
	 * Set value of children
	 * @param context
	 * @param children
	 */
	public final void setchildren(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String children)
	{
		getMendixObject().setValue(context, MemberNames.children.toString(), children);
	}

	/**
	 * @return value of canMove
	 */
	public final java.lang.Boolean getcanMove()
	{
		return getcanMove(getContext());
	}

	/**
	 * @param context
	 * @return value of canMove
	 */
	public final java.lang.Boolean getcanMove(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.canMove.toString());
	}

	/**
	 * Set value of canMove
	 * @param canmove
	 */
	public final void setcanMove(java.lang.Boolean canmove)
	{
		setcanMove(getContext(), canmove);
	}

	/**
	 * Set value of canMove
	 * @param context
	 * @param canmove
	 */
	public final void setcanMove(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean canmove)
	{
		getMendixObject().setValue(context, MemberNames.canMove.toString(), canmove);
	}

	/**
	 * @return value of canRename
	 */
	public final java.lang.Boolean getcanRename()
	{
		return getcanRename(getContext());
	}

	/**
	 * @param context
	 * @return value of canRename
	 */
	public final java.lang.Boolean getcanRename(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.canRename.toString());
	}

	/**
	 * Set value of canRename
	 * @param canrename
	 */
	public final void setcanRename(java.lang.Boolean canrename)
	{
		setcanRename(getContext(), canrename);
	}

	/**
	 * Set value of canRename
	 * @param context
	 * @param canrename
	 */
	public final void setcanRename(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean canrename)
	{
		getMendixObject().setValue(context, MemberNames.canRename.toString(), canrename);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of ResponseNode_GetDataResponse
	 */
	public final testtreewidget.proxies.GetDataResponse getResponseNode_GetDataResponse() throws com.mendix.core.CoreException
	{
		return getResponseNode_GetDataResponse(getContext());
	}

	/**
	 * @param context
	 * @return value of ResponseNode_GetDataResponse
	 * @throws com.mendix.core.CoreException
	 */
	public final testtreewidget.proxies.GetDataResponse getResponseNode_GetDataResponse(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testtreewidget.proxies.GetDataResponse result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ResponseNode_GetDataResponse.toString());
		if (identifier != null) {
			result = testtreewidget.proxies.GetDataResponse.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of ResponseNode_GetDataResponse
	 * @param responsenode_getdataresponse
	 */
	public final void setResponseNode_GetDataResponse(testtreewidget.proxies.GetDataResponse responsenode_getdataresponse)
	{
		setResponseNode_GetDataResponse(getContext(), responsenode_getdataresponse);
	}

	/**
	 * Set value of ResponseNode_GetDataResponse
	 * @param context
	 * @param responsenode_getdataresponse
	 */
	public final void setResponseNode_GetDataResponse(com.mendix.systemwideinterfaces.core.IContext context, testtreewidget.proxies.GetDataResponse responsenode_getdataresponse)
	{
		if (responsenode_getdataresponse == null) {
			getMendixObject().setValue(context, MemberNames.ResponseNode_GetDataResponse.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.ResponseNode_GetDataResponse.toString(), responsenode_getdataresponse.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return responseNodeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testtreewidget.proxies.ResponseNode that = (testtreewidget.proxies.ResponseNode) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}

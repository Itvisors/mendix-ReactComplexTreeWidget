// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testtreewidget.proxies;

public class UserContext
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject userContextMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestTreeWidget.UserContext";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ServiceURL("ServiceURL"),
		DataChangedDate("DataChangedDate"),
		ContextID("ContextID"),
		UserContext_TestContainer("TestTreeWidget.UserContext_TestContainer"),
		UserContext_Session("TestTreeWidget.UserContext_Session");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public UserContext(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected UserContext(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject userContextMendixObject)
	{
		if (userContextMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, userContextMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.userContextMendixObject = userContextMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'UserContext.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static testtreewidget.proxies.UserContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testtreewidget.proxies.UserContext.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static testtreewidget.proxies.UserContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testtreewidget.proxies.UserContext(context, mendixObject);
	}

	public static testtreewidget.proxies.UserContext load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testtreewidget.proxies.UserContext.initialize(context, mendixObject);
	}

	public static java.util.List<testtreewidget.proxies.UserContext> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> testtreewidget.proxies.UserContext.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ServiceURL
	 */
	public final java.lang.String getServiceURL()
	{
		return getServiceURL(getContext());
	}

	/**
	 * @param context
	 * @return value of ServiceURL
	 */
	public final java.lang.String getServiceURL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ServiceURL.toString());
	}

	/**
	 * Set value of ServiceURL
	 * @param serviceurl
	 */
	public final void setServiceURL(java.lang.String serviceurl)
	{
		setServiceURL(getContext(), serviceurl);
	}

	/**
	 * Set value of ServiceURL
	 * @param context
	 * @param serviceurl
	 */
	public final void setServiceURL(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String serviceurl)
	{
		getMendixObject().setValue(context, MemberNames.ServiceURL.toString(), serviceurl);
	}

	/**
	 * @return value of DataChangedDate
	 */
	public final java.util.Date getDataChangedDate()
	{
		return getDataChangedDate(getContext());
	}

	/**
	 * @param context
	 * @return value of DataChangedDate
	 */
	public final java.util.Date getDataChangedDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DataChangedDate.toString());
	}

	/**
	 * Set value of DataChangedDate
	 * @param datachangeddate
	 */
	public final void setDataChangedDate(java.util.Date datachangeddate)
	{
		setDataChangedDate(getContext(), datachangeddate);
	}

	/**
	 * Set value of DataChangedDate
	 * @param context
	 * @param datachangeddate
	 */
	public final void setDataChangedDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datachangeddate)
	{
		getMendixObject().setValue(context, MemberNames.DataChangedDate.toString(), datachangeddate);
	}

	/**
	 * @return value of ContextID
	 */
	public final java.lang.Long getContextID()
	{
		return getContextID(getContext());
	}

	/**
	 * @param context
	 * @return value of ContextID
	 */
	public final java.lang.Long getContextID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.ContextID.toString());
	}

	/**
	 * Set value of ContextID
	 * @param contextid
	 */
	public final void setContextID(java.lang.Long contextid)
	{
		setContextID(getContext(), contextid);
	}

	/**
	 * Set value of ContextID
	 * @param context
	 * @param contextid
	 */
	public final void setContextID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long contextid)
	{
		getMendixObject().setValue(context, MemberNames.ContextID.toString(), contextid);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of UserContext_TestContainer
	 */
	public final testtreewidget.proxies.TestContainer getUserContext_TestContainer() throws com.mendix.core.CoreException
	{
		return getUserContext_TestContainer(getContext());
	}

	/**
	 * @param context
	 * @return value of UserContext_TestContainer
	 * @throws com.mendix.core.CoreException
	 */
	public final testtreewidget.proxies.TestContainer getUserContext_TestContainer(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		testtreewidget.proxies.TestContainer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UserContext_TestContainer.toString());
		if (identifier != null) {
			result = testtreewidget.proxies.TestContainer.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of UserContext_TestContainer
	 * @param usercontext_testcontainer
	 */
	public final void setUserContext_TestContainer(testtreewidget.proxies.TestContainer usercontext_testcontainer)
	{
		setUserContext_TestContainer(getContext(), usercontext_testcontainer);
	}

	/**
	 * Set value of UserContext_TestContainer
	 * @param context
	 * @param usercontext_testcontainer
	 */
	public final void setUserContext_TestContainer(com.mendix.systemwideinterfaces.core.IContext context, testtreewidget.proxies.TestContainer usercontext_testcontainer)
	{
		if (usercontext_testcontainer == null) {
			getMendixObject().setValue(context, MemberNames.UserContext_TestContainer.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.UserContext_TestContainer.toString(), usercontext_testcontainer.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of UserContext_Session
	 */
	public final system.proxies.Session getUserContext_Session() throws com.mendix.core.CoreException
	{
		return getUserContext_Session(getContext());
	}

	/**
	 * @param context
	 * @return value of UserContext_Session
	 * @throws com.mendix.core.CoreException
	 */
	public final system.proxies.Session getUserContext_Session(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.Session result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.UserContext_Session.toString());
		if (identifier != null) {
			result = system.proxies.Session.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of UserContext_Session
	 * @param usercontext_session
	 */
	public final void setUserContext_Session(system.proxies.Session usercontext_session)
	{
		setUserContext_Session(getContext(), usercontext_session);
	}

	/**
	 * Set value of UserContext_Session
	 * @param context
	 * @param usercontext_session
	 */
	public final void setUserContext_Session(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.Session usercontext_session)
	{
		if (usercontext_session == null) {
			getMendixObject().setValue(context, MemberNames.UserContext_Session.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.UserContext_Session.toString(), usercontext_session.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return userContextMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testtreewidget.proxies.UserContext that = (testtreewidget.proxies.UserContext) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
